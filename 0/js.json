{"dependencies":[{"kind":"library","name":"dart:core","id":"dart.core","comment":"\n\nBuilt-in types, collections,\nand other core functionality for every Dart program.\n\nThis library is automatically imported.\n\nSome classes in this library,\nsuch as [String] and [num],\nsupport Dart's built-in data types.\nOther classes, such as [List] and [Map], provide data structures\nfor managing collections of objects.\nAnd still other classes represent commonly used types of data\nsuch as URIs, dates and times, and errors.\n\n## Numbers and booleans\n\n[int] and [double] provide support for Dart's built-in numerical data types:\nintegers and double-precision floating point numbers, respectively.\nAn object of type [bool] is either true or false.\nVariables of these types can be constructed from literals:\n\n    int meaningOfLife = 42;\n    double valueOfPi  = 3.141592;\n    bool visible      = true;\n\n## Strings and regular expressions\n\nA [String] is immutable and represents a sequence of characters.\n\n    String shakespeareQuote = \"All the world's a stage, ...\";\n\n[StringBuffer] provides a way to construct strings efficiently.\n\n    StringBuffer moreShakespeare = new StringBuffer();\n    moreShakespeare.write('And all the men and women ');\n    moreShakespeare.write('merely players; ...');\n\nThe String and StringBuffer classes implement string concatenation,\ninterpolation, and other string manipulation features.\n\n    String philosophy = 'Live on ';\n    String get palindrome => philosophy + philosophy.split('').reversed.join();\n\n[RegExp] implements Dart regular expressions,\nwhich provide a grammar for matching patterns within text.\nFor example, here's a regular expression that matches\na string of one or more digits:\n\n    var numbers = new RegExp(r'\\d+');\n\nDart regular expressions have the same syntax and semantics as\nJavaScript regular expressions. See\n<http://ecma-international.org/ecma-262/5.1/#sec-15.10>\nfor the specification of JavaScript regular expressions.\n\n## Collections\n\nThe dart:core library provides basic collections,\nsuch as [List], [Map], and [Set].\n\nA List is an ordered collection of objects, with a length.\nLists are sometimes called arrays.\nUse a List when you need to access objects by index.\n\n    List superheroes = [ 'Batman', 'Superman', 'Harry Potter' ];\n\nA Set is an unordered collection of unique objects.\nYou cannot get an item by index (position).\nAdding a duplicate item has no effect.\n\n    Set villians = new Set();\n    villians.add('Joker');\n    villians.addAll( ['Lex Luther', 'Voldemort'] );\n\nA Map is an unordered collection of key-value pairs.\nMaps are sometimes called associative arrays because\nmaps associate a key to some value for easy retrieval.\nKeys are unique.\nUse a Map when you need to access objects\nby a unique identifier.\n\n    Map sidekicks = { 'Batman': 'Robin',\n                      'Superman': 'Lois Lane',\n                      'Harry Potter': 'Ron and Hermione' };\n\nIn addition to these classes,\ndart:core contains [Iterable],\nan interface that defines functionality\ncommon in collections of objects.\nExamples include the ability\nto run a function on each element in the collection,\nto apply a test to each element, \nto retrieve an object, and to determine length.\n\nIterable is implemented by List and Set,\nand used by Map for its keys and values.\n\nFor other kinds of collections, check out the\n[dart:collection](#dart-collection) library.\n\n## Date and time\n\nUse [DateTime] to represent a point in time\nand [Duration] to represent a span of time.\n\nYou can create DateTime objects with constructors\nor by parsing a correctly formatted string.\n\n    DateTime now = new DateTime.now();\n    DateTime berlinWallFell = new DateTime(1989, 11, 9);\n    DateTime moonLanding = DateTime.parse(\"1969-07-20\");\n\nCreate a Duration object specifying the individual time units.\n\n    Duration timeRemaining = new Duration(hours:56, minutes:14);\n\nIn addition to DateTime and Duration,\ndart:core contains the [Stopwatch] class for measuring elapsed time.\n    \n## Uri\n\nA [Uri] object represents a uniform resource identifier,\nwhich identifies a resource on the web.\n\n    Uri dartlang = Uri.parse('http://dartlang.org/');\n    \n## Errors\n\nThe [Error] class represents the occurrence of an error\nduring runtime.\nSubclasses of this class represent specific kinds of errors.\n\n## Other documentation\n\nFor more information about how to use the built-in types, refer to\n[Built-in Types](http://www.dartlang.org/docs/dart-up-and-running/contents/ch02.html#built-in-types)\nin Chapter 2 of\n[Dart: Up and Running](http://www.dartlang.org/docs/dart-up-and-running/).\n\nAlso, see\n[dart:core - Numbers, Collections, Strings, and More](http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-dartcore---strings-collections-and-more)\nfor more coverage of classes in this package.\n\nThe \n[Dart Language Specification](http://www.dartlang.org/docs/spec/)\nprovides technical details.\n","children":[{"kind":"class","name":"Object","id":"Object","comment":"\nThe base class for all Dart objects.\n\nBecause Object is the root of the Dart class hierarchy,\nevery other Dart class is a subclass of Object.\n\nWhen you define a class, you should override [toString]\nto return a string describing an instance of that class.\nYou might also need to define [hashCode] and [==], as described in the\n[Implementing map keys]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-implementing-map-keys)\nsection of the [library tour]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html).\n","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nOverride this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:\n\n * Total: It must return a boolean for all arguments. It should never throw\n   or return `null`.\n\n * Reflexive: For all objects `o`, `o == o` must be true.\n\n * Symmetric: For all objects `o1` and `o2`, `o1 == o2` and `o2 == o1` must\n   either both be true, or both be false.\n\n * Transitive: For all objects `o1`, `o2`, and `o3`, if `o1 == o2` and\n   `o2 == o3` are true, then `o1 == o3` must be true.\n\nThe method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","children":[{"kind":"param","name":"other","id":"other"}],"line":"59"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nReturns a string representation of this object.\n","line":"78"},{"kind":"method","name":"noSuchMethod","id":"noSuchMethod1()","comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","children":[{"ref":{"name":"Invocation","refId":"dart.core/Invocation"},"kind":"param","name":"invocation","id":"invocation"}],"line":"90"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","line":"73"},{"ref":{"name":"Type","refId":"dart.core/Type"},"kind":"property","name":"runtimeType","id":"runtimeType","comment":"\nA representation of the runtime type of the object.\n","line":"95"},{"kind":"constructor","name":"","id":"0()","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","line":"29"}],"uri":"dart-sdk/lib/core/object.dart","line":"21"}],"uri":"dart-sdk/lib/core/core.dart","line":"153"}],"kind":"library","name":"package:js/js.dart","id":"js","comment":"\nThe js.dart library provides simple JavaScript invocation from Dart that\nworks on both Dartium and on other modern browsers via Dart2JS.\n\nIt provides a model based on scoped [Proxy] objects.  Proxies give Dart\ncode access to JavaScript objects, fields, and functions as well as the\nability to pass Dart objects and functions to JavaScript functions.  Scopes\nenable developers to use proxies without memory leaks - a common challenge\nwith cross-runtime interoperation.\n\nThe top-level [context] getter provides a [Proxy] to the global JavaScript\ncontext for the page your Dart code is running on.  In the following example:\n\n    import 'package:js/js.dart' as js;\n\n    void main() {\n      js.context.alert('Hello from Dart via JavaScript');\n    }\n\njs.context.alert creates a proxy to the top-level alert function in\nJavaScript.  It is invoked from Dart as a regular function that forwards to\nthe underlying JavaScript one.  By default, proxies are released when\nthe currently executing event completes, e.g., when main is completes\nin this example.\n\nThe library also enables JavaScript proxies to Dart objects and functions.\nFor example, the following Dart code:\n\n    js.context.dartCallback = new Callback.once((x) => print(x*2));\n\ndefines a top-level JavaScript function 'dartCallback' that is a proxy to\nthe corresponding Dart function.  The [Callback.once] constructor allows the\nproxy to the Dart function to be retained across multiple events;\ninstead it is released after the first invocation.  (This is a common\npattern for asychronous callbacks.)\n\nNote, parameters and return values are intuitively passed by value for\nprimitives and by reference for non-primitives.  In the latter case, the\nreferences are automatically wrapped and unwrapped as proxies by the library.\n\nThis library also allows construction of JavaScripts objects given a [Proxy]\nto a corresponding JavaScript constructor.  For example, if the following\nJavaScript is loaded on the page:\n\n    function Foo(x) {\n      this.x = x;\n    }\n\n    Foo.prototype.add = function(other) {\n      return new Foo(this.x + other.x);\n    }\n\nthen, the following Dart:\n\n    var foo = new js.Proxy(js.context.Foo, 42);\n    var foo2 = foo.add(foo);\n    print(foo2.x);\n\nwill construct a JavaScript Foo object with the parameter 42, invoke its\nadd method, and return a [Proxy] to a new Foo object whose x field is 84.\n\nSee [samples](http://dart-lang.github.com/js-interop/example) for more\nexamples of usage.\n\nSee this [article](http://www.dartlang.org/articles/js-dart-interop) for\nmore detailed discussion.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_proxyDebug","id":"_proxyDebug1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"''","isOptional":true,"kind":"param","name":"message","id":"message"}],"isPrivate":true,"line":"1390"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"proxyCount","id":"proxyCount3()","comment":"\nReturns the number of allocated proxy objects matching the given\nconditions.  By default, the total number of live proxy objects are\nreturn.  In a well behaved program, this should stay below a small\nbound.\n\nSet [all] to true to return the total number of proxies ever allocated.\nSet [dartOnly] to only count proxies to Dart objects (live or all).\nSet [jsOnly] to only count proxies to JavaScript objects (live or all).\n","children":[{"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"all","id":"all"},{"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"dartOnly","id":"dartOnly"},{"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"jsOnly","id":"jsOnly"}],"line":"1369"},{"returnType":{"name":"List","refId":"dart.core/List"},"kind":"method","name":"_proxyCountJavaScript","id":"_proxyCountJavaScript0()","isPrivate":true,"line":"1357"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"method","name":"_deserializeElement","id":"_deserializeElement1()","children":[{"kind":"param","name":"id","id":"id"}],"isPrivate":true,"line":"1321"},{"kind":"method","name":"_serializeElement","id":"_serializeElement1()","children":[{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"param","name":"e","id":"e"}],"isPrivate":true,"line":"1281"},{"kind":"method","name":"_deserialize","id":"_deserialize1()","children":[{"kind":"param","name":"message","id":"message"}],"isPrivate":true,"line":"1228"},{"kind":"method","name":"_serialize","id":"_serialize1()","comment":"End of proxy implementation.","children":[{"kind":"param","name":"message","id":"message"}],"isPrivate":true,"line":"1197"},{"returnType":{"name":"List","refId":"dart.core/List"},"kind":"method","name":"_pruneUndefined","id":"_pruneUndefined6()","children":[{"kind":"param","name":"arg1","id":"arg1"},{"kind":"param","name":"arg2","id":"arg2"},{"kind":"param","name":"arg3","id":"arg3"},{"kind":"param","name":"arg4","id":"arg4"},{"kind":"param","name":"arg5","id":"arg5"},{"kind":"param","name":"arg6","id":"arg6"}],"isPrivate":true,"line":"902"},{"returnType":{"name":"Proxy","refId":"js/Proxy"},"kind":"method","name":"array","id":"array1()","comment":"\nConverts a Dart [Iterable] to a JavaScript array and return a [Proxy] to it.\n","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"data","id":"data"}],"line":"832"},{"returnType":{"name":"Proxy","refId":"js/Proxy"},"kind":"method","name":"map","id":"map1()","comment":"\nConverts a Dart map [data] to a JavaScript map and return a [Proxy] to it.\n","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"kind":"param","name":"data","id":"data"}],"line":"827"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"deleteProperty","id":"deleteProperty2()","comment":"\nDelete the [name] property of [proxy].\n","children":[{"ref":{"name":"Serializable","refId":"js/Serializable","arguments":[{"name":"Proxy","refId":"js/Proxy"}]},"kind":"param","name":"proxy","id":"proxy"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"line":"820"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"hasProperty","id":"hasProperty2()","comment":"\nCheck if [proxy] has a [name] property.\n","children":[{"ref":{"name":"Serializable","refId":"js/Serializable","arguments":[{"name":"Proxy","refId":"js/Proxy"}]},"kind":"param","name":"proxy","id":"proxy"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"line":"814"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"instanceof","id":"instanceof2()","comment":"\nCheck if [proxy] is instance of [type].\n","children":[{"ref":{"name":"Serializable","refId":"js/Serializable","arguments":[{"name":"Proxy","refId":"js/Proxy"}]},"kind":"param","name":"proxy","id":"proxy"},{"ref":{"name":"Serializable","refId":"js/Serializable","arguments":[{"name":"FunctionProxy","refId":"js/FunctionProxy"}]},"kind":"param","name":"type","id":"type"}],"line":"807"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"release","id":"release1()","comment":"\nReleases a retained [object].\n","children":[{"ref":{"name":"Serializable","refId":"js/Serializable","arguments":[{"name":"Proxy","refId":"js/Proxy"}]},"kind":"param","name":"object","id":"object"}],"line":"800"},{"kind":"method","name":"retain","id":"retain1()","comment":"\nRetains the given [object] beyond the current scope.\nInstead, it will need to be explicitly released.\nThe given [object] is returned for convenience.\n","children":[{"ref":{"name":"Serializable","refId":"js/Serializable","arguments":[{"name":"Proxy","refId":"js/Proxy"}]},"kind":"param","name":"object","id":"object"}],"line":"792"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"$experimentalExitScope","id":"$experimentalExitScope1()","comment":"WARNING: This API is experimental and may be removed.","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"depth","id":"depth"}],"line":"779"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"$experimentalEnterScope","id":"$experimentalEnterScope0()","comment":"WARNING: This API is experimental and may be removed.","line":"770"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_exitScope","id":"_exitScope1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"depth","id":"depth"}],"isPrivate":true,"line":"760"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_enterScope","id":"_enterScope0()","isPrivate":true,"line":"753"},{"kind":"method","name":"scoped","id":"scoped1()","comment":"\nExecutes the closure [f] within a scope.  Any proxies created within this\nscope are invalidated afterward unless they are converted to a global proxy.\n","children":[{"kind":"param","name":"f","id":"f"}],"line":"744"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_enterScopeIfNeeded","id":"_enterScopeIfNeeded0()","isPrivate":true,"line":"733"},{"kind":"method","name":"_depth","id":"_depth0()","isPrivate":true,"line":"729"},{"returnType":{"name":"Proxy","refId":"js/Proxy"},"kind":"method","name":"context","id":"context0()","comment":"\nReturns a proxy to the global JavaScript context for this page.\n","line":"723"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_initialize","id":"_initialize0()","isPrivate":true,"line":"684"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_inject","id":"_inject1()","children":[{"kind":"param","name":"code","id":"code"}],"isPrivate":true,"line":"658"},{"kind":"property","name":"_depth","id":"_depth","isPrivate":true,"line":"729"},{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"property","name":"context","id":"context","comment":"\nReturns a proxy to the global JavaScript context for this page.\n","line":"723"},{"kind":"variable","name":"_DART_TEMPORARY_ATTACHED","id":"_DART_TEMPORARY_ATTACHED","isPrivate":true,"line":"1279"},{"kind":"variable","name":"_DART_ID","id":"_DART_ID","isPrivate":true,"line":"1278"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_localNextElementId","id":"_localNextElementId","isPrivate":true,"line":"1276"},{"ref":{"name":"_ProxiedObjectTable","refId":"js/_ProxiedObjectTable"},"kind":"variable","name":"_proxiedObjectTable","id":"_proxiedObjectTable","isPrivate":true,"line":"1191"},{"kind":"variable","name":"_undefined","id":"_undefined","isPrivate":true,"line":"901"},{"ref":{"name":"ReceivePortSync","refId":"dart.dom.html/ReceivePortSync"},"kind":"variable","name":"_dartExitDartScope","id":"_dartExitDartScope","isPrivate":true,"line":"681"},{"ref":{"name":"ReceivePortSync","refId":"dart.dom.html/ReceivePortSync"},"kind":"variable","name":"_dartEnterDartScope","id":"_dartEnterDartScope","isPrivate":true,"line":"680"},{"ref":{"name":"SendPortSync","refId":"dart.isolate/SendPortSync"},"kind":"variable","name":"_jsInvalidate","id":"_jsInvalidate","isPrivate":true,"line":"677"},{"ref":{"name":"SendPortSync","refId":"dart.isolate/SendPortSync"},"kind":"variable","name":"_jsGlobalize","id":"_jsGlobalize","isPrivate":true,"line":"676"},{"ref":{"name":"SendPortSync","refId":"dart.isolate/SendPortSync"},"kind":"variable","name":"_jsExitJavaScriptScope","id":"_jsExitJavaScriptScope","isPrivate":true,"line":"675"},{"ref":{"name":"SendPortSync","refId":"dart.isolate/SendPortSync"},"kind":"variable","name":"_jsEnterJavaScriptScope","id":"_jsEnterJavaScriptScope","isPrivate":true,"line":"674"},{"ref":{"name":"SendPortSync","refId":"dart.isolate/SendPortSync"},"kind":"variable","name":"_jsPortConvert","id":"_jsPortConvert","isPrivate":true,"line":"673"},{"ref":{"name":"SendPortSync","refId":"dart.isolate/SendPortSync"},"kind":"variable","name":"_jsPortDeleteProperty","id":"_jsPortDeleteProperty","isPrivate":true,"line":"672"},{"ref":{"name":"SendPortSync","refId":"dart.isolate/SendPortSync"},"kind":"variable","name":"_jsPortHasProperty","id":"_jsPortHasProperty","isPrivate":true,"line":"671"},{"ref":{"name":"SendPortSync","refId":"dart.isolate/SendPortSync"},"kind":"variable","name":"_jsPortInstanceof","id":"_jsPortInstanceof","isPrivate":true,"line":"670"},{"ref":{"name":"SendPortSync","refId":"dart.isolate/SendPortSync"},"kind":"variable","name":"_jsPortEquals","id":"_jsPortEquals","isPrivate":true,"line":"669"},{"ref":{"name":"SendPortSync","refId":"dart.isolate/SendPortSync"},"kind":"variable","name":"_jsPortProxyCount","id":"_jsPortProxyCount","isPrivate":true,"line":"668"},{"ref":{"name":"SendPortSync","refId":"dart.isolate/SendPortSync"},"kind":"variable","name":"_jsPortCreate","id":"_jsPortCreate","isPrivate":true,"line":"667"},{"ref":{"name":"SendPortSync","refId":"dart.isolate/SendPortSync"},"kind":"variable","name":"_jsPortSync","id":"_jsPortSync","isPrivate":true,"line":"666"},{"isFinal":true,"kind":"variable","name":"_JS_BOOTSTRAP","id":"_JS_BOOTSTRAP","isPrivate":true,"line":"86"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_ProxiedObjectTable","id":"_ProxiedObjectTable","children":[{"kind":"method","name":"enterScope","id":"enterScope0()","line":"1099"},{"kind":"method","name":"exitScope","id":"exitScope0()","line":"1105"},{"kind":"method","name":"globalize","id":"globalize1()","children":[{"kind":"param","name":"id","id":"id"}],"line":"1120"},{"kind":"method","name":"invalidate","id":"invalidate1()","children":[{"kind":"param","name":"id","id":"id"}],"line":"1123"},{"kind":"method","name":"_replace","id":"_replace2()","children":[{"kind":"param","name":"id","id":"id"},{"kind":"param","name":"x","id":"x"}],"isPrivate":true,"line":"1132"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"add","id":"add1()","children":[{"kind":"param","name":"x","id":"x"}],"line":"1166"},{"returnType":{"name":"Object","refId":"dart.core/Object"},"kind":"method","name":"get","id":"get1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"id","id":"id"}],"line":"1176"},{"kind":"property","name":"count","id":"count","line":"1181"},{"kind":"property","name":"total","id":"total","line":"1184"},{"kind":"property","name":"sendPort","id":"sendPort","line":"1187"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"_name","id":"_name","isPrivate":true,"line":"1073"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_nextId","id":"_nextId","isPrivate":true,"line":"1076"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_deletedCount","id":"_deletedCount","isPrivate":true,"line":"1079"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"Object","refId":"dart.core/Object"}]},"isFinal":true,"kind":"variable","name":"_registry","id":"_registry","isPrivate":true,"line":"1082"},{"ref":{"name":"ReceivePortSync","refId":"dart.dom.html/ReceivePortSync"},"isFinal":true,"kind":"variable","name":"_port","id":"_port","isPrivate":true,"line":"1086"},{"ref":{"name":"Set","refId":"dart.core/Set","arguments":[{"name":"String","refId":"dart.core/String"}]},"isFinal":true,"kind":"variable","name":"_globalIds","id":"_globalIds","isPrivate":true,"line":"1089"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"isFinal":true,"kind":"variable","name":"_handleStack","id":"_handleStack","isPrivate":true,"line":"1092"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"isFinal":true,"kind":"variable","name":"_scopeIndices","id":"_scopeIndices","isPrivate":true,"line":"1096"},{"kind":"constructor","name":"","id":"0()","line":"1136"}],"isPrivate":true,"line":"1071"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Serializable","id":"Serializable","comment":"Marker class used to indicate it is serializable to js. If a class is a\n[Serializable] the \"toJs\" method will be called and the result will be used\nas value.","children":[{"returnType":{"name":"T","refId":"js/Serializable/T"},"kind":"method","name":"toJs","id":"toJs0()","line":"1067"},{"kind":"typeparam","name":"T","id":"T"}],"line":"1066"},{"superclass":{"name":"Proxy","refId":"js/Proxy"},"interfaces":[{"name":"Serializable","refId":"js/Serializable","arguments":[{"name":"FunctionProxy","refId":"js/FunctionProxy"}]}],"kind":"class","name":"FunctionProxy","id":"FunctionProxy","comment":"A [Proxy] subtype to JavaScript functions.","children":[{"kind":"method","name":"call","id":"call6()","children":[{"defaultValue":"_undefined","isOptional":true,"kind":"param","name":"arg1","id":"arg1"},{"defaultValue":"_undefined","isOptional":true,"kind":"param","name":"arg2","id":"arg2"},{"defaultValue":"_undefined","isOptional":true,"kind":"param","name":"arg3","id":"arg3","line":"1056"},{"defaultValue":"_undefined","isOptional":true,"kind":"param","name":"arg4","id":"arg4","line":"1056"},{"defaultValue":"_undefined","isOptional":true,"kind":"param","name":"arg5","id":"arg5","line":"1057"},{"defaultValue":"_undefined","isOptional":true,"kind":"param","name":"arg6","id":"arg6","line":"1057"}],"line":"1055"},{"kind":"constructor","name":"_internal","id":"_internal2()","children":[{"ref":{"name":"SendPortSync","refId":"dart.isolate/SendPortSync"},"kind":"param","name":"port","id":"port"},{"kind":"param","name":"id","id":"id"}],"isPrivate":true,"line":"1048"}],"line":"1046"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"Serializable","refId":"js/Serializable","arguments":[{"name":"Proxy","refId":"js/Proxy"}]}],"kind":"class","name":"Proxy","id":"Proxy","comment":"\nProxies to JavaScript objects.\n","children":[{"isStatic":true,"kind":"method","name":"_convert","id":"_convert1()","children":[{"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"956"},{"isStatic":true,"kind":"method","name":"_serializeDataTree","id":"_serializeDataTree1()","children":[{"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"960"},{"returnType":{"name":"Proxy","refId":"js/Proxy"},"kind":"method","name":"toJs","id":"toJs0()","line":"976"},{"isOperator":true,"kind":"method","name":"[]","id":"[]1()","children":[{"kind":"param","name":"arg","id":"arg"}],"line":"979"},{"isOperator":true,"kind":"method","name":"[]=","id":"[]=2()","children":[{"kind":"param","name":"key","id":"key"},{"kind":"param","name":"value","id":"value"}],"line":"982"},{"isOperator":true,"kind":"method","name":"==","id":"==1()","children":[{"kind":"param","name":"other","id":"other"}],"line":"987"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"992"},{"kind":"method","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"name":"Invocation","refId":"dart.core/Invocation"},"kind":"param","name":"invocation","id":"invocation"}],"line":"1001"},{"isStatic":true,"kind":"method","name":"_forward","id":"_forward4()","children":[{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"param","name":"receiver","id":"receiver"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"member","id":"member"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"kind","id":"kind"},{"ref":{"name":"List","refId":"dart.core/List"},"kind":"param","name":"args","id":"args"}],"isPrivate":true,"line":"1031"},{"ref":{"name":"SendPortSync","refId":"dart.isolate/SendPortSync"},"kind":"variable","name":"_port","id":"_port","isPrivate":true,"line":"914"},{"isFinal":true,"kind":"variable","name":"_id","id":"_id","isPrivate":true,"line":"915"},{"returnType":{"name":"Proxy","refId":"js/Proxy"},"kind":"constructor","name":"","id":"7()","comment":"\nConstructs a [Proxy] to a new JavaScript object by invoking a (proxy to a)\nJavaScript [constructor].  The arguments should be either\nprimitive values, DOM elements, or Proxies.\n","children":[{"ref":{"name":"Serializable","refId":"js/Serializable","arguments":[{"name":"FunctionProxy","refId":"js/FunctionProxy"}]},"kind":"param","name":"constructor","id":"constructor"},{"defaultValue":"_undefined","isOptional":true,"kind":"param","name":"arg1","id":"arg1","line":"923"},{"defaultValue":"_undefined","isOptional":true,"kind":"param","name":"arg2","id":"arg2","line":"924"},{"defaultValue":"_undefined","isOptional":true,"kind":"param","name":"arg3","id":"arg3","line":"925"},{"defaultValue":"_undefined","isOptional":true,"kind":"param","name":"arg4","id":"arg4","line":"926"},{"defaultValue":"_undefined","isOptional":true,"kind":"param","name":"arg5","id":"arg5","line":"927"},{"defaultValue":"_undefined","isOptional":true,"kind":"param","name":"arg6","id":"arg6","line":"928"}],"line":"922"},{"returnType":{"name":"Proxy","refId":"js/Proxy"},"kind":"constructor","name":"withArgList","id":"withArgList2()","comment":"\nConstructs a [Proxy] to a new JavaScript object by invoking a (proxy to a)\nJavaScript [constructor].  The [arguments] list should contain either\nprimitive values, DOM elements, or Proxies.\n","children":[{"ref":{"name":"Serializable","refId":"js/Serializable","arguments":[{"name":"FunctionProxy","refId":"js/FunctionProxy"}]},"kind":"param","name":"constructor","id":"constructor"},{"ref":{"name":"List","refId":"dart.core/List"},"kind":"param","name":"arguments","id":"arguments","line":"939"}],"line":"938"},{"returnType":{"name":"Proxy","refId":"js/Proxy"},"kind":"constructor","name":"_json","id":"_json1()","comment":"\nConstructs a [Proxy] to a new JavaScript map or list created defined via\nDart map or list.\n","children":[{"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"951"},{"kind":"constructor","name":"_internal","id":"_internal2()","children":[{"ref":{"name":"SendPortSync","refId":"dart.isolate/SendPortSync"},"initializedField":{"name":"_port","refId":"js/Proxy/_port"},"kind":"param","name":"_port","id":"_port","isPrivate":true},{"initializedField":{"name":"_id","refId":"js/Proxy/_id"},"kind":"param","name":"_id","id":"_id","isPrivate":true}],"isPrivate":true,"line":"974"}],"line":"913"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_Undefined","id":"_Undefined","children":[{"kind":"constructor","name":"","id":"0()","line":"899"}],"isPrivate":true,"line":"898"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"Serializable","refId":"js/Serializable","arguments":[{"name":"FunctionProxy","refId":"js/FunctionProxy"}]}],"kind":"class","name":"Callback","id":"Callback","comment":"\nConverts a local Dart function to a callback that can be passed to\nJavaScript.\n\nA callback can either be:\n\n- single-fire, in which case it is automatically invalidated after the first\n  invocation, or\n- multi-fire, in which case it must be explicitly disposed.\n","children":[{"kind":"method","name":"_initialize","id":"_initialize1()","children":[{"kind":"param","name":"manualDispose","id":"manualDispose"}],"isPrivate":true,"line":"849"},{"kind":"method","name":"_dispose","id":"_dispose0()","isPrivate":true,"line":"855"},{"returnType":{"name":"FunctionProxy","refId":"js/FunctionProxy"},"kind":"method","name":"toJs","id":"toJs0()","line":"859"},{"kind":"method","name":"dispose","id":"dispose0()","comment":"\nDisposes this [Callback] so that it may be collected.\nOnce a [Callback] is disposed, it is an error to invoke it from JavaScript.\n","line":"866"},{"kind":"variable","name":"_manualDispose","id":"_manualDispose","isPrivate":true,"line":"845"},{"kind":"variable","name":"_id","id":"_id","isPrivate":true,"line":"846"},{"kind":"variable","name":"_callback","id":"_callback","isPrivate":true,"line":"847"},{"kind":"constructor","name":"once","id":"once2()","comment":"\nCreates a single-fire [Callback] that invokes [f].  The callback is\nautomatically disposed after the first invocation.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"withThis","id":"withThis"}],"line":"875"},{"kind":"constructor","name":"many","id":"many2()","comment":"\nCreates a multi-fire [Callback] that invokes [f].  The callback must be\nexplicitly disposed to avoid memory leaks.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"withThis","id":"withThis"}],"line":"890"}],"line":"844"}],"uri":"package:js/js.dart","line":"73"}