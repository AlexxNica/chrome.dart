{"name":"Window","qualifiedName":"chrome/chrome_ext.Window","comment":"","isAbstract":false,"superclass":"chrome/chrome_ext.ChromeObject","implements":[],"subclass":[],"variables":{},"inheritedVariables":{"jsProxy":{"name":"jsProxy","qualifiedName":"chrome/chrome_app.ChromeObject.jsProxy","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dynamic","inner":[]}],"annotations":[]}},"methods":{"setters":{"id=":{"name":"id=","qualifiedName":"chrome/chrome_ext.Window.id=","comment":"","commentFrom":"chrome_ext.Window.id=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"focused=":{"name":"focused=","qualifiedName":"chrome/chrome_ext.Window.focused=","comment":"","commentFrom":"chrome_ext.Window.focused=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"top=":{"name":"top=","qualifiedName":"chrome/chrome_ext.Window.top=","comment":"","commentFrom":"chrome_ext.Window.top=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"left=":{"name":"left=","qualifiedName":"chrome/chrome_ext.Window.left=","comment":"","commentFrom":"chrome_ext.Window.left=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"width=":{"name":"width=","qualifiedName":"chrome/chrome_ext.Window.width=","comment":"","commentFrom":"chrome_ext.Window.width=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"height=":{"name":"height=","qualifiedName":"chrome/chrome_ext.Window.height=","comment":"","commentFrom":"chrome_ext.Window.height=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"tabs=":{"name":"tabs=","qualifiedName":"chrome/chrome_ext.Window.tabs=","comment":"","commentFrom":"chrome_ext.Window.tabs=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"chrome/chrome_ext.Tab","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]},"incognito=":{"name":"incognito=","qualifiedName":"chrome/chrome_ext.Window.incognito=","comment":"","commentFrom":"chrome_ext.Window.incognito=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"type=":{"name":"type=","qualifiedName":"chrome/chrome_ext.Window.type=","comment":"","commentFrom":"chrome_ext.Window.type=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"state=":{"name":"state=","qualifiedName":"chrome/chrome_ext.Window.state=","comment":"","commentFrom":"chrome_ext.Window.state=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"alwaysOnTop=":{"name":"alwaysOnTop=","qualifiedName":"chrome/chrome_ext.Window.alwaysOnTop=","comment":"","commentFrom":"chrome_ext.Window.alwaysOnTop=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"sessionId=":{"name":"sessionId=","qualifiedName":"chrome/chrome_ext.Window.sessionId=","comment":"","commentFrom":"chrome_ext.Window.sessionId=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"getters":{"id":{"name":"id","qualifiedName":"chrome/chrome_ext.Window.id","comment":"<p>The ID of the window. Window IDs are unique within a browser session. Under\nsome circumstances a Window may not be assigned an ID, for example when\nquerying windows using the sessions API, in which case a session ID may\nbe present.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"focused":{"name":"focused","qualifiedName":"chrome/chrome_ext.Window.focused","comment":"<p>Whether the window is currently the focused window.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"top":{"name":"top","qualifiedName":"chrome/chrome_ext.Window.top","comment":"<p>The offset of the window from the top edge of the screen in pixels. Under\nsome circumstances a Window may not be assigned top property, for example\nwhen querying closed windows from the sessions API.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"left":{"name":"left","qualifiedName":"chrome/chrome_ext.Window.left","comment":"<p>The offset of the window from the left edge of the screen in pixels. Under\nsome circumstances a Window may not be assigned left property, for example\nwhen querying closed windows from the sessions API.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"width":{"name":"width","qualifiedName":"chrome/chrome_ext.Window.width","comment":"<p>The width of the window, including the frame, in pixels. Under some\ncircumstances a Window may not be assigned width property, for example when\nquerying closed windows from the sessions API.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"height":{"name":"height","qualifiedName":"chrome/chrome_ext.Window.height","comment":"<p>The height of the window, including the frame, in pixels. Under some\ncircumstances a Window may not be assigned height property, for example\nwhen querying closed windows from the sessions API.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"tabs":{"name":"tabs","qualifiedName":"chrome/chrome_ext.Window.tabs","comment":"<p>Array of tabs.Tab objects representing the current tabs in the window.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"chrome/chrome_ext.Tab","inner":[]}]}],"parameters":{},"annotations":[]},"incognito":{"name":"incognito","qualifiedName":"chrome/chrome_ext.Window.incognito","comment":"<p>Whether the window is incognito.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"type":{"name":"type","qualifiedName":"chrome/chrome_ext.Window.type","comment":"<p>The type of browser window this is. Under some circumstances a Window may\nnot be assigned type property, for example when querying closed windows\nfrom the sessions API.\nenum of <code>normal</code>, <code>popup</code>, <code>panel</code>, <code>app</code></p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"state":{"name":"state","qualifiedName":"chrome/chrome_ext.Window.state","comment":"<p>The state of this browser window. Under some circumstances a Window may not\nbe assigned state property, for example when querying closed windows from\nthe sessions API.\nenum of <code>normal</code>, <code>minimized</code>, <code>maximized</code>, <code>fullscreen</code></p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"alwaysOnTop":{"name":"alwaysOnTop","qualifiedName":"chrome/chrome_ext.Window.alwaysOnTop","comment":"<p>Whether the window is set to be always on top.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"sessionId":{"name":"sessionId","qualifiedName":"chrome/chrome_ext.Window.sessionId","comment":"<p>The session ID used to uniquely identify a Window obtained from the\nsessions API.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"chrome/chrome_ext.Window.Window-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"id":{"name":"id","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]},"focused":{"name":"focused","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"null","annotations":[]},"top":{"name":"top","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]},"left":{"name":"left","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]},"width":{"name":"width","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]},"height":{"name":"height","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]},"tabs":{"name":"tabs","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"chrome/chrome_ext.Tab","inner":[]}]}],"value":"null","annotations":[]},"incognito":{"name":"incognito","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"null","annotations":[]},"type":{"name":"type","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]},"state":{"name":"state","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]},"alwaysOnTop":{"name":"alwaysOnTop","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"null","annotations":[]},"sessionId":{"name":"sessionId","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"fromProxy":{"name":"fromProxy","qualifiedName":"chrome/chrome_ext.Window.Window-fromProxy","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"jsProxy":{"name":"jsProxy","optional":false,"named":false,"default":false,"type":[{"outer":"dart-js.JsObject","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"operators":{},"methods":{}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"chrome/chrome_ext.Window.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>chrome/chrome_ext.Window.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"chrome/chrome_ext.Window.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"chrome/chrome_ext.Window.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>chrome/chrome_ext.Window.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>chrome/chrome_ext.Window.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"chrome/chrome_ext.Window.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"chrome_ext.ChromeObject.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"chrome/chrome_ext.Window.noSuchMethod","comment":"<p><a>chrome/chrome_ext.Window.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>chrome/chrome_ext.Window.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>chrome/chrome_ext.Window.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>chrome/chrome_ext.Window.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"toJs":{"name":"toJs","qualifiedName":"chrome/chrome_ext.Window.toJs","comment":"","commentFrom":"","inheritedFrom":"chrome_ext.ChromeObject.toJs","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-js.JsObject","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}