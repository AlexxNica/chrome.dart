{"name":"ChromeBrowserAction","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction","comment":"","isAbstract":false,"superclass":"chrome/chrome_ext.ChromeApi","implements":[],"subclass":[],"variables":{"_onClicked":{"name":"_onClicked","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction._onClicked","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"chrome/chrome-src-common.ChromeStreamController","inner":[{"outer":"chrome/chrome_ext.Tab","inner":[]}]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"_browserAction":{"name":"_browserAction","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction._browserAction","comment":"","commentFrom":"chrome_ext.ChromeBrowserAction._browserAction","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-js.JsObject","inner":[]}],"parameters":{},"annotations":[]},"available":{"name":"available","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.available","comment":"<p>Returns true if the API is available. The common causes of an API not being\navilable are:</p><ul><li>a permission is missing in the application's manifest.json file</li><li>the API is defined on a newer version of Chrome then the current runtime</li></ul>","commentFrom":"chrome_app.ChromeApi.available","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"onClicked":{"name":"onClicked","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.onClicked","comment":"<p>Fired when a browser action icon is clicked.  This event will not fire if\nthe browser action has a popup.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"chrome/chrome_ext.Tab","inner":[]}]}],"parameters":{},"annotations":[]}},"constructors":{"_":{"name":"_","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.ChromeBrowserAction-_","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]}},"operators":{},"methods":{"_throwNotAvailable":{"name":"_throwNotAvailable","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction._throwNotAvailable","comment":"","commentFrom":"chrome_ext.ChromeBrowserAction._throwNotAvailable","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"disable":{"name":"disable","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.disable","comment":"<p>Disables the browser action for a tab.</p>\n<p><a>chrome/chrome_ext.ChromeBrowserAction.disable.tabId</a> The id of the tab for which you want to modify the browser action.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"tabId":{"name":"tabId","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"enable":{"name":"enable","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.enable","comment":"<p>Enables the browser action for a tab. By default, browser actions are\nenabled.</p>\n<p><a>chrome/chrome_ext.ChromeBrowserAction.enable.tabId</a> The id of the tab for which you want to modify the browser action.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"tabId":{"name":"tabId","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"getBadgeBackgroundColor":{"name":"getBadgeBackgroundColor","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.getBadgeBackgroundColor","comment":"<p>Gets the background color of the browser action.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"chrome/chrome_ext.ColorArray","inner":[]}]}],"parameters":{"details":{"name":"details","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.BrowserActionGetBadgeBackgroundColorParams","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"getBadgeText":{"name":"getBadgeText","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.getBadgeText","comment":"<p>Gets the badge text of the browser action. If no tab is specified, the\nnon-tab-specific badge text is returned.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-core.String","inner":[]}]}],"parameters":{"details":{"name":"details","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.BrowserActionGetBadgeTextParams","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"getPopup":{"name":"getPopup","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.getPopup","comment":"<p>Gets the html document set as the popup for this browser action.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-core.String","inner":[]}]}],"parameters":{"details":{"name":"details","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.BrowserActionGetPopupParams","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"getTitle":{"name":"getTitle","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.getTitle","comment":"<p>Gets the title of the browser action.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-core.String","inner":[]}]}],"parameters":{"details":{"name":"details","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.BrowserActionGetTitleParams","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"openPopup":{"name":"openPopup","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.openPopup","comment":"<p>Opens the extension popup window in the active window but does not grant\ntab permissions.</p>\n<p>Returns:\nJavaScript 'window' object for the popup window if it was succesfully\nopened.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dynamic","inner":[]}]}]}],"parameters":{},"annotations":[]},"setBadgeBackgroundColor":{"name":"setBadgeBackgroundColor","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.setBadgeBackgroundColor","comment":"<p>Sets the background color for the badge.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"details":{"name":"details","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.BrowserActionSetBadgeBackgroundColorParams","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"setBadgeText":{"name":"setBadgeText","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.setBadgeText","comment":"<p>Sets the badge text for the browser action. The badge is displayed on top\nof the icon.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"details":{"name":"details","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.BrowserActionSetBadgeTextParams","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"setIcon":{"name":"setIcon","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.setIcon","comment":"<p>Sets the icon for the browser action. The icon can be specified either as\nthe path to an image file or as the pixel data from a canvas element, or as\ndictionary of either one of those. Either the &lt;b>path&lt;/b> or the\n&lt;b>imageData&lt;/b> property must be specified.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"details":{"name":"details","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.BrowserActionSetIconParams","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"setPopup":{"name":"setPopup","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.setPopup","comment":"<p>Sets the html document to be opened as a popup when the user clicks on the\nbrowser action's icon.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"details":{"name":"details","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.BrowserActionSetPopupParams","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"setTitle":{"name":"setTitle","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.setTitle","comment":"<p>Sets the title of the browser action. This shows up in the tooltip.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"details":{"name":"details","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.BrowserActionSetTitleParams","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"available":{"name":"available","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.available","comment":"<p>Returns true if the API is available. The common causes of an API not being\navilable are:</p><ul><li>a permission is missing in the application's manifest.json file</li><li>the API is defined on a newer version of Chrome then the current runtime</li></ul>","commentFrom":"","inheritedFrom":"chrome_ext.ChromeApi.available","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"hashCode":{"name":"hashCode","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>chrome/chrome_ext.ChromeBrowserAction.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>chrome/chrome_ext.ChromeBrowserAction.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>chrome/chrome_ext.ChromeBrowserAction.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.noSuchMethod","comment":"<p><a>chrome/chrome_ext.ChromeBrowserAction.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>chrome/chrome_ext.ChromeBrowserAction.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>chrome/chrome_ext.ChromeBrowserAction.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>chrome/chrome_ext.ChromeBrowserAction.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"chrome/chrome_ext.ChromeBrowserAction.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}