{"name":"ChromeSystemStorage","qualifiedName":"chrome/chrome_ext.ChromeSystemStorage","comment":"<p>Use the <code>chrome.system.storage</code> API to query storage device information and\nbe notified when a removable storage device is attached and detached.</p>","isAbstract":false,"superclass":"chrome/chrome_ext.ChromeApi","implements":[],"subclass":[],"variables":{"_onAttached":{"name":"_onAttached","qualifiedName":"chrome/chrome_app.ChromeSystemStorage._onAttached","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"chrome/chrome-src-common.ChromeStreamController","inner":[{"outer":"chrome/chrome_app.StorageUnitInfo","inner":[]}]}],"annotations":[]},"_onDetached":{"name":"_onDetached","qualifiedName":"chrome/chrome_app.ChromeSystemStorage._onDetached","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"chrome/chrome-src-common.ChromeStreamController","inner":[{"outer":"dart-core.String","inner":[]}]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"_system_storage":{"name":"_system_storage","qualifiedName":"chrome/chrome_ext.ChromeSystemStorage._system_storage","comment":"","commentFrom":"chrome_app.ChromeSystemStorage._system_storage","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-js.JsObject","inner":[]}],"parameters":{},"annotations":[]},"onAttached":{"name":"onAttached","qualifiedName":"chrome/chrome_ext.ChromeSystemStorage.onAttached","comment":"","commentFrom":"chrome_app.ChromeSystemStorage.onAttached","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"chrome/chrome_ext.StorageUnitInfo","inner":[]}]}],"parameters":{},"annotations":[]},"onDetached":{"name":"onDetached","qualifiedName":"chrome/chrome_ext.ChromeSystemStorage.onDetached","comment":"","commentFrom":"chrome_app.ChromeSystemStorage.onDetached","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-core.String","inner":[]}]}],"parameters":{},"annotations":[]},"available":{"name":"available","qualifiedName":"chrome/chrome_ext.ChromeSystemStorage.available","comment":"<p>Returns true if the API is available. The common causes of an API not being\navilable are:</p><ul><li>a permission is missing in the application's manifest.json file</li><li>the API is defined on a newer version of Chrome then the current runtime</li></ul>","commentFrom":"chrome_app.ChromeApi.available","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"_":{"name":"_","qualifiedName":"chrome/chrome_ext.ChromeSystemStorage.ChromeSystemStorage-_","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]}},"operators":{},"methods":{"getInfo":{"name":"getInfo","qualifiedName":"chrome/chrome_ext.ChromeSystemStorage.getInfo","comment":"<p>Get the storage information from the system. The argument passed to the\ncallback is an array of StorageUnitInfo objects.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-core.List","inner":[{"outer":"chrome/chrome_ext.StorageUnitInfo","inner":[]}]}]}],"parameters":{},"annotations":[]},"ejectDevice":{"name":"ejectDevice","qualifiedName":"chrome/chrome_ext.ChromeSystemStorage.ejectDevice","comment":"<p>Ejects a removable storage device.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"chrome/chrome_ext.EjectDeviceResultCode","inner":[]}]}],"parameters":{"id":{"name":"id","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getAvailableCapacity":{"name":"getAvailableCapacity","qualifiedName":"chrome/chrome_ext.ChromeSystemStorage.getAvailableCapacity","comment":"<p>Get the available capacity of a specified <a>chrome/chrome_ext.ChromeSystemStorage.getAvailableCapacity.id</a> storage device. The <a>chrome/chrome_ext.ChromeSystemStorage.getAvailableCapacity.id</a> is\nthe transient device ID from StorageUnitInfo.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"chrome/chrome_ext.StorageAvailableCapacityInfo","inner":[]}]}],"parameters":{"id":{"name":"id","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"_throwNotAvailable":{"name":"_throwNotAvailable","qualifiedName":"chrome/chrome_ext.ChromeSystemStorage._throwNotAvailable","comment":"","commentFrom":"chrome_app.ChromeSystemStorage._throwNotAvailable","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"chrome/chrome_ext.ChromeSystemStorage.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>chrome/chrome_ext.ChromeSystemStorage.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"chrome/chrome_ext.ChromeSystemStorage.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]},"available":{"name":"available","qualifiedName":"chrome/chrome_ext.ChromeSystemStorage.available","comment":"<p>Returns true if the API is available. The common causes of an API not being\navilable are:</p><ul><li>a permission is missing in the application's manifest.json file</li><li>the API is defined on a newer version of Chrome then the current runtime</li></ul>","commentFrom":"","inheritedFrom":"chrome_ext.ChromeApi.available","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"chrome/chrome_ext.ChromeSystemStorage.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>chrome/chrome_ext.ChromeSystemStorage.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>chrome/chrome_ext.ChromeSystemStorage.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"chrome/chrome_ext.ChromeSystemStorage.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"chrome/chrome_ext.ChromeSystemStorage.noSuchMethod","comment":"<p><a>chrome/chrome_ext.ChromeSystemStorage.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>chrome/chrome_ext.ChromeSystemStorage.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>chrome/chrome_ext.ChromeSystemStorage.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>chrome/chrome_ext.ChromeSystemStorage.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}