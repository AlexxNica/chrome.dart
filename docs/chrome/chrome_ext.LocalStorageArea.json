{"name":"LocalStorageArea","qualifiedName":"chrome/chrome_ext.LocalStorageArea","comment":"","isAbstract":false,"superclass":"chrome/chrome_ext.StorageArea","implements":[],"subclass":[],"variables":{},"inheritedVariables":{"jsProxy":{"name":"jsProxy","qualifiedName":"chrome/chrome_app.ChromeObject.jsProxy","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dynamic","inner":[]}],"annotations":[]}},"methods":{"setters":{},"getters":{"QUOTA_BYTES":{"name":"QUOTA_BYTES","qualifiedName":"chrome/chrome_ext.LocalStorageArea.QUOTA_BYTES","comment":"<p>The maximum amount (in bytes) of data that can be stored in local storage,\nas measured by the JSON stringification of every value plus every key's\nlength. This value will be ignored if the extension has the\n<code>unlimitedStorage</code> permission. Updates that would cause this limit to be\nexceeded fail immediately and set runtime.lastError.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"chrome/chrome_ext.LocalStorageArea.LocalStorageArea-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]},"fromProxy":{"name":"fromProxy","qualifiedName":"chrome/chrome_ext.LocalStorageArea.LocalStorageArea-fromProxy","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"jsProxy":{"name":"jsProxy","optional":false,"named":false,"default":false,"type":[{"outer":"dart-js.JsObject","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"operators":{},"methods":{}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"chrome/chrome_ext.LocalStorageArea.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>chrome/chrome_ext.LocalStorageArea.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"chrome/chrome_ext.LocalStorageArea.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"chrome/chrome_ext.LocalStorageArea.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>chrome/chrome_ext.LocalStorageArea.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>chrome/chrome_ext.LocalStorageArea.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"clear":{"name":"clear","qualifiedName":"chrome/chrome_ext.LocalStorageArea.clear","comment":"<p>Removes all items from storage.</p>","commentFrom":"","inheritedFrom":"chrome_ext.StorageArea.clear","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{},"annotations":[]},"get":{"name":"get","qualifiedName":"chrome/chrome_ext.LocalStorageArea.get","comment":"<p>Gets one or more items from storage.</p>\n<p><a>chrome/chrome_ext.LocalStorageArea.get.keys</a> A single key to get, list of keys to get, or a dictionary specifying\ndefault values (see description of the object).  An empty list or object\nwill return an empty result object.  Pass in <code>null</code> to get the entire\ncontents of storage.</p>\n<p>Returns:\nObject with items in their key-value mappings.</p>","commentFrom":"","inheritedFrom":"chrome_ext.StorageArea.get","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dynamic","inner":[]}]}]}],"parameters":{"keys":{"name":"keys","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"getBytesInUse":{"name":"getBytesInUse","qualifiedName":"chrome/chrome_ext.LocalStorageArea.getBytesInUse","comment":"<p>Gets the amount of space (in bytes) being used by one or more items.</p>\n<p><a>chrome/chrome_ext.LocalStorageArea.getBytesInUse.keys</a> A single key or list of keys to get the total usage for. An empty\nlist will return 0. Pass in <code>null</code> to get the total usage of all of\nstorage.</p>\n<p>Returns:\nAmount of space being used in storage, in bytes.</p>","commentFrom":"","inheritedFrom":"chrome_ext.StorageArea.getBytesInUse","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-core.int","inner":[]}]}],"parameters":{"keys":{"name":"keys","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"chrome/chrome_ext.LocalStorageArea.noSuchMethod","comment":"<p><a>chrome/chrome_ext.LocalStorageArea.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>chrome/chrome_ext.LocalStorageArea.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>chrome/chrome_ext.LocalStorageArea.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>chrome/chrome_ext.LocalStorageArea.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"remove":{"name":"remove","qualifiedName":"chrome/chrome_ext.LocalStorageArea.remove","comment":"<p>Removes one or more items from storage.</p>\n<p><a>chrome/chrome_ext.LocalStorageArea.remove.keys</a> A single key or a list of keys for items to remove.</p>","commentFrom":"","inheritedFrom":"chrome_ext.StorageArea.remove","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"keys":{"name":"keys","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"set":{"name":"set","qualifiedName":"chrome/chrome_ext.LocalStorageArea.set","comment":"<p>Sets multiple items.</p>\n<p><a>chrome/chrome_ext.LocalStorageArea.set.items</a> An object which gives each key/value pair to update storage with.\nAny other key/value pairs in storage will not be affected.</p>\n<p>Primitive values such as numbers will serialize as expected. Values with a\n<code>typeof</code> <code>\"object\"</code> and <code>\"function\"</code> will typically serialize to <code>{}</code>, with\nthe exception of <code>Array</code> (serializes as expected), <code>Date</code>, and <code>Regex</code>\n(serialize using their <code>String</code> representation).</p>","commentFrom":"","inheritedFrom":"chrome_ext.StorageArea.set","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"items":{"name":"items","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dynamic","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"toJs":{"name":"toJs","qualifiedName":"chrome/chrome_ext.LocalStorageArea.toJs","comment":"","commentFrom":"","inheritedFrom":"chrome_ext.ChromeObject.toJs","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-js.JsObject","inner":[]}],"parameters":{},"annotations":[]},"toString":{"name":"toString","qualifiedName":"chrome/chrome_ext.LocalStorageArea.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"chrome_ext.ChromeObject.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}