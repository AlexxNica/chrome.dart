{"name":"RequestMatcher","qualifiedName":"chrome/chrome_ext.RequestMatcher","comment":"<p>Matches network events by various criteria.</p>","isAbstract":false,"superclass":"chrome/chrome_ext.ChromeObject","implements":[],"subclass":[],"variables":{},"inheritedVariables":{"jsProxy":{"name":"jsProxy","qualifiedName":"chrome/chrome_app.ChromeObject.jsProxy","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dynamic","inner":[]}],"annotations":[]}},"methods":{"setters":{"url=":{"name":"url=","qualifiedName":"chrome/chrome_ext.RequestMatcher.url=","comment":"","commentFrom":"chrome_ext.RequestMatcher.url=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.UrlFilter","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"firstPartyForCookiesUrl=":{"name":"firstPartyForCookiesUrl=","qualifiedName":"chrome/chrome_ext.RequestMatcher.firstPartyForCookiesUrl=","comment":"","commentFrom":"chrome_ext.RequestMatcher.firstPartyForCookiesUrl=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.UrlFilter","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"resourceType=":{"name":"resourceType=","qualifiedName":"chrome/chrome_ext.RequestMatcher.resourceType=","comment":"","commentFrom":"chrome_ext.RequestMatcher.resourceType=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]},"contentType=":{"name":"contentType=","qualifiedName":"chrome/chrome_ext.RequestMatcher.contentType=","comment":"","commentFrom":"chrome_ext.RequestMatcher.contentType=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]},"excludeContentType=":{"name":"excludeContentType=","qualifiedName":"chrome/chrome_ext.RequestMatcher.excludeContentType=","comment":"","commentFrom":"chrome_ext.RequestMatcher.excludeContentType=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]},"requestHeaders=":{"name":"requestHeaders=","qualifiedName":"chrome/chrome_ext.RequestMatcher.requestHeaders=","comment":"","commentFrom":"chrome_ext.RequestMatcher.requestHeaders=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"chrome/chrome_ext.HeaderFilter","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]},"excludeRequestHeaders=":{"name":"excludeRequestHeaders=","qualifiedName":"chrome/chrome_ext.RequestMatcher.excludeRequestHeaders=","comment":"","commentFrom":"chrome_ext.RequestMatcher.excludeRequestHeaders=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"chrome/chrome_ext.HeaderFilter","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]},"responseHeaders=":{"name":"responseHeaders=","qualifiedName":"chrome/chrome_ext.RequestMatcher.responseHeaders=","comment":"","commentFrom":"chrome_ext.RequestMatcher.responseHeaders=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"chrome/chrome_ext.HeaderFilter","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]},"excludeResponseHeaders=":{"name":"excludeResponseHeaders=","qualifiedName":"chrome/chrome_ext.RequestMatcher.excludeResponseHeaders=","comment":"","commentFrom":"chrome_ext.RequestMatcher.excludeResponseHeaders=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"chrome/chrome_ext.HeaderFilter","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]},"thirdPartyForCookies=":{"name":"thirdPartyForCookies=","qualifiedName":"chrome/chrome_ext.RequestMatcher.thirdPartyForCookies=","comment":"","commentFrom":"chrome_ext.RequestMatcher.thirdPartyForCookies=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"stages=":{"name":"stages=","qualifiedName":"chrome/chrome_ext.RequestMatcher.stages=","comment":"","commentFrom":"chrome_ext.RequestMatcher.stages=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]}},"getters":{"url":{"name":"url","qualifiedName":"chrome/chrome_ext.RequestMatcher.url","comment":"<p>Matches if the conditions of the UrlFilter are fulfilled for the URL of the\nrequest.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"chrome/chrome_ext.UrlFilter","inner":[]}],"parameters":{},"annotations":[]},"firstPartyForCookiesUrl":{"name":"firstPartyForCookiesUrl","qualifiedName":"chrome/chrome_ext.RequestMatcher.firstPartyForCookiesUrl","comment":"<p>Matches if the conditions of the UrlFilter are fulfilled for the 'first\nparty' URL of the request. The 'first party' URL of a request, when\npresent, can be different from the request's target URL, and describes what\nis considered 'first party' for the sake of third-party checks for cookies.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"chrome/chrome_ext.UrlFilter","inner":[]}],"parameters":{},"annotations":[]},"resourceType":{"name":"resourceType","qualifiedName":"chrome/chrome_ext.RequestMatcher.resourceType","comment":"<p>Matches if the request type of a request is contained in the list. Requests\nthat cannot match any of the types will be filtered out.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"parameters":{},"annotations":[]},"contentType":{"name":"contentType","qualifiedName":"chrome/chrome_ext.RequestMatcher.contentType","comment":"<p>Matches if the MIME media type of a response (from the HTTP Content-Type\nheader) is contained in the list.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"parameters":{},"annotations":[]},"excludeContentType":{"name":"excludeContentType","qualifiedName":"chrome/chrome_ext.RequestMatcher.excludeContentType","comment":"<p>Matches if the MIME media type of a response (from the HTTP Content-Type\nheader) is <em>not</em> contained in the list.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"parameters":{},"annotations":[]},"requestHeaders":{"name":"requestHeaders","qualifiedName":"chrome/chrome_ext.RequestMatcher.requestHeaders","comment":"<p>Matches if some of the request headers is matched by one of the\nHeaderFilters.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"chrome/chrome_ext.HeaderFilter","inner":[]}]}],"parameters":{},"annotations":[]},"excludeRequestHeaders":{"name":"excludeRequestHeaders","qualifiedName":"chrome/chrome_ext.RequestMatcher.excludeRequestHeaders","comment":"<p>Matches if none of the request headers is matched by any of the\nHeaderFilters.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"chrome/chrome_ext.HeaderFilter","inner":[]}]}],"parameters":{},"annotations":[]},"responseHeaders":{"name":"responseHeaders","qualifiedName":"chrome/chrome_ext.RequestMatcher.responseHeaders","comment":"<p>Matches if some of the response headers is matched by one of the\nHeaderFilters.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"chrome/chrome_ext.HeaderFilter","inner":[]}]}],"parameters":{},"annotations":[]},"excludeResponseHeaders":{"name":"excludeResponseHeaders","qualifiedName":"chrome/chrome_ext.RequestMatcher.excludeResponseHeaders","comment":"<p>Matches if none of the response headers is matched by any of the\nHeaderFilters.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"chrome/chrome_ext.HeaderFilter","inner":[]}]}],"parameters":{},"annotations":[]},"thirdPartyForCookies":{"name":"thirdPartyForCookies","qualifiedName":"chrome/chrome_ext.RequestMatcher.thirdPartyForCookies","comment":"<p>If set to true, matches requests that are subject to third-party cookie\npolicies. If set to false, matches all other requests.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"stages":{"name":"stages","qualifiedName":"chrome/chrome_ext.RequestMatcher.stages","comment":"<p>Contains a list of strings describing stages. Allowed values are\n'onBeforeRequest', 'onBeforeSendHeaders', 'onHeadersReceived',\n'onAuthRequired'. If this attribute is present, then it limits the\napplicable stages to those listed. Note that the whole condition is only\napplicable in stages compatible with all attributes.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"chrome/chrome_ext.RequestMatcher.RequestMatcher-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"url":{"name":"url","optional":true,"named":true,"default":false,"type":[{"outer":"chrome/chrome_ext.UrlFilter","inner":[]}],"value":"null","annotations":[]},"firstPartyForCookiesUrl":{"name":"firstPartyForCookiesUrl","optional":true,"named":true,"default":false,"type":[{"outer":"chrome/chrome_ext.UrlFilter","inner":[]}],"value":"null","annotations":[]},"resourceType":{"name":"resourceType","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"value":"null","annotations":[]},"contentType":{"name":"contentType","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"value":"null","annotations":[]},"excludeContentType":{"name":"excludeContentType","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"value":"null","annotations":[]},"requestHeaders":{"name":"requestHeaders","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"chrome/chrome_ext.HeaderFilter","inner":[]}]}],"value":"null","annotations":[]},"excludeRequestHeaders":{"name":"excludeRequestHeaders","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"chrome/chrome_ext.HeaderFilter","inner":[]}]}],"value":"null","annotations":[]},"responseHeaders":{"name":"responseHeaders","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"chrome/chrome_ext.HeaderFilter","inner":[]}]}],"value":"null","annotations":[]},"excludeResponseHeaders":{"name":"excludeResponseHeaders","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"chrome/chrome_ext.HeaderFilter","inner":[]}]}],"value":"null","annotations":[]},"thirdPartyForCookies":{"name":"thirdPartyForCookies","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"null","annotations":[]},"stages":{"name":"stages","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]},"fromProxy":{"name":"fromProxy","qualifiedName":"chrome/chrome_ext.RequestMatcher.RequestMatcher-fromProxy","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"jsProxy":{"name":"jsProxy","optional":false,"named":false,"default":false,"type":[{"outer":"dart-js.JsObject","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"operators":{},"methods":{}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"chrome/chrome_ext.RequestMatcher.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>chrome/chrome_ext.RequestMatcher.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"chrome/chrome_ext.RequestMatcher.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"chrome/chrome_ext.RequestMatcher.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>chrome/chrome_ext.RequestMatcher.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>chrome/chrome_ext.RequestMatcher.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"chrome/chrome_ext.RequestMatcher.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"chrome_ext.ChromeObject.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"chrome/chrome_ext.RequestMatcher.noSuchMethod","comment":"<p><a>chrome/chrome_ext.RequestMatcher.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>chrome/chrome_ext.RequestMatcher.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>chrome/chrome_ext.RequestMatcher.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>chrome/chrome_ext.RequestMatcher.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"toJs":{"name":"toJs","qualifiedName":"chrome/chrome_ext.RequestMatcher.toJs","comment":"","commentFrom":"","inheritedFrom":"chrome_ext.ChromeObject.toJs","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-js.JsObject","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}