{"name":"ChromeSerial","qualifiedName":"chrome/chrome_app.ChromeSerial","comment":"","isAbstract":false,"superclass":"chrome/chrome_app.ChromeApi","implements":[],"subclass":[],"variables":{"_onReceive":{"name":"_onReceive","qualifiedName":"chrome/chrome_app.ChromeSerial._onReceive","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"chrome/chrome-src-common.ChromeStreamController","inner":[{"outer":"chrome/chrome_app.SerialReceiveInfo","inner":[]}]}],"annotations":[]},"_onReceiveError":{"name":"_onReceiveError","qualifiedName":"chrome/chrome_app.ChromeSerial._onReceiveError","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"chrome/chrome-src-common.ChromeStreamController","inner":[{"outer":"chrome/chrome_app.SerialReceiveErrorInfo","inner":[]}]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"_serial":{"name":"_serial","qualifiedName":"chrome/chrome_app.ChromeSerial._serial","comment":"","commentFrom":"chrome_app.ChromeSerial._serial","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-js.JsObject","inner":[]}],"parameters":{},"annotations":[]},"available":{"name":"available","qualifiedName":"chrome/chrome_app.ChromeSerial.available","comment":"<p>Returns true if the API is available. The common causes of an API not being\navilable are:</p><ul><li>a permission is missing in the application's manifest.json file</li><li>the API is defined on a newer version of Chrome then the current runtime</li></ul>","commentFrom":"chrome_app.ChromeApi.available","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"onReceive":{"name":"onReceive","qualifiedName":"chrome/chrome_app.ChromeSerial.onReceive","comment":"","commentFrom":"chrome_app.ChromeSerial.onReceive","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"chrome/chrome_app.SerialReceiveInfo","inner":[]}]}],"parameters":{},"annotations":[]},"onReceiveError":{"name":"onReceiveError","qualifiedName":"chrome/chrome_app.ChromeSerial.onReceiveError","comment":"","commentFrom":"chrome_app.ChromeSerial.onReceiveError","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"chrome/chrome_app.SerialReceiveErrorInfo","inner":[]}]}],"parameters":{},"annotations":[]}},"constructors":{"_":{"name":"_","qualifiedName":"chrome/chrome_app.ChromeSerial.ChromeSerial-_","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]}},"operators":{},"methods":{"_throwNotAvailable":{"name":"_throwNotAvailable","qualifiedName":"chrome/chrome_app.ChromeSerial._throwNotAvailable","comment":"","commentFrom":"chrome_app.ChromeSerial._throwNotAvailable","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"connect":{"name":"connect","qualifiedName":"chrome/chrome_app.ChromeSerial.connect","comment":"<p>Connects to a given serial port.\n<a>chrome/chrome_app.ChromeSerial.connect.path</a>: The system path of the serial port to open.\n<a>chrome/chrome_app.ChromeSerial.connect.options</a>: Port configuration options.\ncallback: Called when the connection has been opened.</p>\n<p>Returns:\nCallback from the <code>connect</code> method;</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"chrome/chrome_app.ConnectionInfo","inner":[]}]}],"parameters":{"options":{"name":"options","optional":true,"named":false,"default":false,"type":[{"outer":"chrome/chrome_app.ConnectionOptions","inner":[]}],"value":null,"annotations":[]},"path":{"name":"path","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"disconnect":{"name":"disconnect","qualifiedName":"chrome/chrome_app.ChromeSerial.disconnect","comment":"<p>Disconnects from a serial port.\n<a>chrome/chrome_app.ChromeSerial.disconnect.connectionId</a>: The id of the opened connection.\ncallback: Called when the connection has been closed.</p>\n<p>Returns:\nCallback from the <code>disconnect</code> method. Returns true if the operation was\nsuccessful.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-core.bool","inner":[]}]}],"parameters":{"connectionId":{"name":"connectionId","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"flush":{"name":"flush","qualifiedName":"chrome/chrome_app.ChromeSerial.flush","comment":"<p>Flushes all bytes in the given connection's input and output buffers.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-core.bool","inner":[]}]}],"parameters":{"connectionId":{"name":"connectionId","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"getConnections":{"name":"getConnections","qualifiedName":"chrome/chrome_app.ChromeSerial.getConnections","comment":"<p>Retrieves the list of currently opened serial port connections owned by the\napplication.\ncallback: Called with the list of connections when available.</p>\n<p>Returns:\nCallback from the <code>getConnections</code> method.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-core.List","inner":[{"outer":"chrome/chrome_app.ConnectionInfo","inner":[]}]}]}],"parameters":{},"annotations":[]},"getControlSignals":{"name":"getControlSignals","qualifiedName":"chrome/chrome_app.ChromeSerial.getControlSignals","comment":"<p>Retrieves the state of control signals on a given connection.\n<a>chrome/chrome_app.ChromeSerial.getControlSignals.connectionId</a>: The id of the connection.\ncallback: Called when the control signals are available.</p>\n<p>Returns:\nReturns a snapshot of current control signals.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"chrome/chrome_app.DeviceControlSignals","inner":[]}]}],"parameters":{"connectionId":{"name":"connectionId","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"getDevices":{"name":"getDevices","qualifiedName":"chrome/chrome_app.ChromeSerial.getDevices","comment":"<p>Returns information about available serial devices on the system. The list\nis regenerated each time this method is called.\ncallback: Called with the list of <code>DeviceInfo</code> objects.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-core.List","inner":[{"outer":"chrome/chrome_app.DeviceInfo","inner":[]}]}]}],"parameters":{},"annotations":[]},"getInfo":{"name":"getInfo","qualifiedName":"chrome/chrome_app.ChromeSerial.getInfo","comment":"<p>Retrieves the state of a given connection.\n<a>chrome/chrome_app.ChromeSerial.getInfo.connectionId</a>: The id of the opened connection.\ncallback: Called with connection state information when available.</p>\n<p>Returns:\nCallback from the <code>getInfo</code> method.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"chrome/chrome_app.ConnectionInfo","inner":[]}]}],"parameters":{"connectionId":{"name":"connectionId","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"send":{"name":"send","qualifiedName":"chrome/chrome_app.ChromeSerial.send","comment":"<p>Writes data to the given connection.\n<a>chrome/chrome_app.ChromeSerial.send.connectionId</a>: The id of the connection.\n<a>chrome/chrome_app.ChromeSerial.send.data</a>: The data to send.\ncallback: Called when the operation has completed.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"chrome/chrome_app.SerialSendInfo","inner":[]}]}],"parameters":{"connectionId":{"name":"connectionId","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"data":{"name":"data","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_app.ArrayBuffer","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"setControlSignals":{"name":"setControlSignals","qualifiedName":"chrome/chrome_app.ChromeSerial.setControlSignals","comment":"<p>Sets the state of control signals on a given connection.\n<a>chrome/chrome_app.ChromeSerial.setControlSignals.connectionId</a>: The id of the connection.\n<a>chrome/chrome_app.ChromeSerial.setControlSignals.signals</a>: The set of signal changes to send to the device.\ncallback: Called once the control signals have been set.</p>\n<p>Returns:\nReturns true if operation was successful.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-core.bool","inner":[]}]}],"parameters":{"connectionId":{"name":"connectionId","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"signals":{"name":"signals","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_app.HostControlSignals","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"setPaused":{"name":"setPaused","qualifiedName":"chrome/chrome_app.ChromeSerial.setPaused","comment":"<p>Pauses or unpauses an open connection.\n<a>chrome/chrome_app.ChromeSerial.setPaused.connectionId</a>: The id of the opened connection.\n<a>chrome/chrome_app.ChromeSerial.setPaused.paused</a>: Flag to indicate whether to pause or unpause.\ncallback: Called when the connection has been successfully paused or\nunpaused.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"connectionId":{"name":"connectionId","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"paused":{"name":"paused","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"update":{"name":"update","qualifiedName":"chrome/chrome_app.ChromeSerial.update","comment":"<p>Update the option settings on an open serial port connection.\n<a>chrome/chrome_app.ChromeSerial.update.connectionId</a>: The id of the opened connection.\n<a>chrome/chrome_app.ChromeSerial.update.options</a>: Port configuration options.\ncallback: Called when the configuation has completed.</p>\n<p>Returns:\nCallback from the <code>update</code> method.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-core.bool","inner":[]}]}],"parameters":{"connectionId":{"name":"connectionId","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"options":{"name":"options","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_app.ConnectionOptions","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"available":{"name":"available","qualifiedName":"chrome/chrome_app.ChromeSerial.available","comment":"<p>Returns true if the API is available. The common causes of an API not being\navilable are:</p><ul><li>a permission is missing in the application's manifest.json file</li><li>the API is defined on a newer version of Chrome then the current runtime</li></ul>","commentFrom":"","inheritedFrom":"chrome_app.ChromeApi.available","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"hashCode":{"name":"hashCode","qualifiedName":"chrome/chrome_app.ChromeSerial.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>chrome/chrome_app.ChromeSerial.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"chrome/chrome_app.ChromeSerial.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"chrome/chrome_app.ChromeSerial.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>chrome/chrome_app.ChromeSerial.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>chrome/chrome_app.ChromeSerial.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"chrome/chrome_app.ChromeSerial.noSuchMethod","comment":"<p><a>chrome/chrome_app.ChromeSerial.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>chrome/chrome_app.ChromeSerial.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>chrome/chrome_app.ChromeSerial.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>chrome/chrome_app.ChromeSerial.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"chrome/chrome_app.ChromeSerial.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}