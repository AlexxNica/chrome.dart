{"name":"ChromeAppWindow","qualifiedName":"chrome/chrome_app.ChromeAppWindow","comment":"","isAbstract":false,"superclass":"chrome/chrome_app._ChromeAppWindow","implements":[],"subclass":[],"variables":{},"inheritedVariables":{"_onBoundsChanged":{"name":"_onBoundsChanged","qualifiedName":"chrome/chrome_app._ChromeAppWindow._onBoundsChanged","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"chrome/chrome-src-common.ChromeStreamController","inner":[]}],"annotations":[]},"_onClosed":{"name":"_onClosed","qualifiedName":"chrome/chrome_app._ChromeAppWindow._onClosed","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"chrome/chrome-src-common.ChromeStreamController","inner":[]}],"annotations":[]},"_onFullscreened":{"name":"_onFullscreened","qualifiedName":"chrome/chrome_app._ChromeAppWindow._onFullscreened","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"chrome/chrome-src-common.ChromeStreamController","inner":[]}],"annotations":[]},"_onMaximized":{"name":"_onMaximized","qualifiedName":"chrome/chrome_app._ChromeAppWindow._onMaximized","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"chrome/chrome-src-common.ChromeStreamController","inner":[]}],"annotations":[]},"_onMinimized":{"name":"_onMinimized","qualifiedName":"chrome/chrome_app._ChromeAppWindow._onMinimized","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"chrome/chrome-src-common.ChromeStreamController","inner":[]}],"annotations":[]},"_onRestored":{"name":"_onRestored","qualifiedName":"chrome/chrome_app._ChromeAppWindow._onRestored","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"chrome/chrome-src-common.ChromeStreamController","inner":[]}],"annotations":[]}},"methods":{"setters":{},"getters":{"onBoundsChanged":{"name":"onBoundsChanged","qualifiedName":"chrome/chrome_app.ChromeAppWindow.onBoundsChanged","comment":"","commentFrom":"chrome_app._ChromeAppWindow.onBoundsChanged","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[]}],"parameters":{},"annotations":[]},"onClosed":{"name":"onClosed","qualifiedName":"chrome/chrome_app.ChromeAppWindow.onClosed","comment":"","commentFrom":"chrome_app._ChromeAppWindow.onClosed","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[]}],"parameters":{},"annotations":[]},"onFullscreened":{"name":"onFullscreened","qualifiedName":"chrome/chrome_app.ChromeAppWindow.onFullscreened","comment":"","commentFrom":"chrome_app._ChromeAppWindow.onFullscreened","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[]}],"parameters":{},"annotations":[]},"onMaximized":{"name":"onMaximized","qualifiedName":"chrome/chrome_app.ChromeAppWindow.onMaximized","comment":"","commentFrom":"chrome_app._ChromeAppWindow.onMaximized","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[]}],"parameters":{},"annotations":[]},"onMinimized":{"name":"onMinimized","qualifiedName":"chrome/chrome_app.ChromeAppWindow.onMinimized","comment":"","commentFrom":"chrome_app._ChromeAppWindow.onMinimized","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[]}],"parameters":{},"annotations":[]},"onRestored":{"name":"onRestored","qualifiedName":"chrome/chrome_app.ChromeAppWindow.onRestored","comment":"","commentFrom":"chrome_app._ChromeAppWindow.onRestored","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"_":{"name":"_","qualifiedName":"chrome/chrome_app.ChromeAppWindow.ChromeAppWindow-_","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]}},"operators":{},"methods":{}},"inheritedMethods":{"setters":{},"getters":{"_app_window":{"name":"_app_window","qualifiedName":"chrome/chrome_app.ChromeAppWindow._app_window","comment":"","commentFrom":"","inheritedFrom":"chrome_app._ChromeAppWindow._app_window","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-js.JsObject","inner":[]}],"parameters":{},"annotations":[]},"available":{"name":"available","qualifiedName":"chrome/chrome_app.ChromeAppWindow.available","comment":"<p>Returns true if the API is available. The common causes of an API not being\navilable are:</p><ul><li>a permission is missing in the application's manifest.json file</li><li>the API is defined on a newer version of Chrome then the current runtime</li></ul>","commentFrom":"chrome_app.ChromeApi.available","inheritedFrom":"chrome_app._ChromeAppWindow.available","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"hashCode":{"name":"hashCode","qualifiedName":"chrome/chrome_app.ChromeAppWindow.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>chrome/chrome_app.ChromeAppWindow.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"onBoundsChanged":{"name":"onBoundsChanged","qualifiedName":"chrome/chrome_app.ChromeAppWindow.onBoundsChanged","comment":"","commentFrom":"","inheritedFrom":"chrome_app._ChromeAppWindow.onBoundsChanged","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[]}],"parameters":{},"annotations":[]},"onClosed":{"name":"onClosed","qualifiedName":"chrome/chrome_app.ChromeAppWindow.onClosed","comment":"","commentFrom":"","inheritedFrom":"chrome_app._ChromeAppWindow.onClosed","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[]}],"parameters":{},"annotations":[]},"onFullscreened":{"name":"onFullscreened","qualifiedName":"chrome/chrome_app.ChromeAppWindow.onFullscreened","comment":"","commentFrom":"","inheritedFrom":"chrome_app._ChromeAppWindow.onFullscreened","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[]}],"parameters":{},"annotations":[]},"onMaximized":{"name":"onMaximized","qualifiedName":"chrome/chrome_app.ChromeAppWindow.onMaximized","comment":"","commentFrom":"","inheritedFrom":"chrome_app._ChromeAppWindow.onMaximized","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[]}],"parameters":{},"annotations":[]},"onMinimized":{"name":"onMinimized","qualifiedName":"chrome/chrome_app.ChromeAppWindow.onMinimized","comment":"","commentFrom":"","inheritedFrom":"chrome_app._ChromeAppWindow.onMinimized","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[]}],"parameters":{},"annotations":[]},"onRestored":{"name":"onRestored","qualifiedName":"chrome/chrome_app.ChromeAppWindow.onRestored","comment":"","commentFrom":"","inheritedFrom":"chrome_app._ChromeAppWindow.onRestored","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"chrome/chrome_app.ChromeAppWindow.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"chrome/chrome_app.ChromeAppWindow.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>chrome/chrome_app.ChromeAppWindow.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>chrome/chrome_app.ChromeAppWindow.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"_throwNotAvailable":{"name":"_throwNotAvailable","qualifiedName":"chrome/chrome_app.ChromeAppWindow._throwNotAvailable","comment":"","commentFrom":"","inheritedFrom":"chrome_app._ChromeAppWindow._throwNotAvailable","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"create":{"name":"create","qualifiedName":"chrome/chrome_app.ChromeAppWindow.create","comment":"<p>The size and position of a window can be specified in a number of different\nways. The most simple option is not specifying anything at all, in which\ncase a default size and platform dependent position will be used.</p>\n<p>Another option is to use the bounds property, which will put the window at\nthe specified coordinates with the specified size. If the window has a\nframe, it's total size will be the size given plus the size of the frame;\nthat is, the size in bounds is the content size, not the window size.</p>\n<p>To automatically remember the positions of windows you can give them ids.\nIf a window has an id, This id is used to remember the size and position of\nthe window whenever it is moved or resized. This size and position is then\nused instead of the specified bounds on subsequent opening of a window with\nthe same id. If you need to open a window with an id at a location other\nthan the remembered default, you can create it hidden, move it to the\ndesired location, then show it.</p>\n<p>Returns:\nCalled in the creating window (parent) before the load event is called in\nthe created window (child). The parent can set fields or functions on the\nchild usable from onload. E.g. background.js:</p>\n<p><code>function(created_window) { created_window.contentWindow.foo = function ()\n{ }; };</code></p>\n<p>window.js:</p>\n<p> <code>window.onload = function () { foo(); }</code></p>","commentFrom":"","inheritedFrom":"chrome_app._ChromeAppWindow.create","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"chrome/chrome_app.AppWindow","inner":[]}]}],"parameters":{"options":{"name":"options","optional":true,"named":false,"default":false,"type":[{"outer":"chrome/chrome_app.CreateWindowOptions","inner":[]}],"value":null,"annotations":[]},"url":{"name":"url","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"current":{"name":"current","qualifiedName":"chrome/chrome_app.ChromeAppWindow.current","comment":"<p>Returns an <a>chrome/chrome_app.AppWindow</a> object for the current script context (ie JavaScript\n'window' object). This can also be called on a handle to a script context\nfor another page, for example: otherWindow.chrome.app.window.current().</p>","commentFrom":"","inheritedFrom":"chrome_app._ChromeAppWindow.current","static":false,"abstract":false,"constant":false,"return":[{"outer":"chrome/chrome_app.AppWindow","inner":[]}],"parameters":{},"annotations":[]},"initializeAppWindow":{"name":"initializeAppWindow","qualifiedName":"chrome/chrome_app.ChromeAppWindow.initializeAppWindow","comment":"","commentFrom":"","inheritedFrom":"chrome_app._ChromeAppWindow.initializeAppWindow","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"state":{"name":"state","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"chrome/chrome_app.ChromeAppWindow.noSuchMethod","comment":"<p><a>chrome/chrome_app.ChromeAppWindow.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>chrome/chrome_app.ChromeAppWindow.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>chrome/chrome_app.ChromeAppWindow.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>chrome/chrome_app.ChromeAppWindow.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"chrome/chrome_app.ChromeAppWindow.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}