{"name":"ChromeBrowsingData","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData","comment":"","isAbstract":false,"superclass":"chrome/chrome_ext.ChromeApi","implements":[],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{},"getters":{"_browsingData":{"name":"_browsingData","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData._browsingData","comment":"","commentFrom":"chrome_ext.ChromeBrowsingData._browsingData","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-js.JsObject","inner":[]}],"parameters":{},"annotations":[]},"available":{"name":"available","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.available","comment":"<p>Returns true if the API is available. The common causes of an API not being\navilable are:</p><ul><li>a permission is missing in the application's manifest.json file</li><li>the API is defined on a newer version of Chrome then the current runtime</li></ul>","commentFrom":"chrome_app.ChromeApi.available","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"_":{"name":"_","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.ChromeBrowsingData-_","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]}},"operators":{},"methods":{"settings":{"name":"settings","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.settings","comment":"<p>Reports which types of data are currently selected in the 'Clear browsing\ndata' settings UI.  Note: some of the data types included in this API are\nnot available in the settings UI, and some UI settings control more than\none data type listed here.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-core.Map","inner":[]}]}],"parameters":{},"annotations":[]},"remove":{"name":"remove","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.remove","comment":"<p>Clears various types of browsing data stored in a user's profile.</p>\n<p><a>chrome/chrome_ext.ChromeBrowsingData.remove.dataToRemove</a> The set of data types to remove.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"options":{"name":"options","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.RemovalOptions","inner":[]}],"value":"null","annotations":[]},"dataToRemove":{"name":"dataToRemove","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.DataTypeSet","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"removeAppcache":{"name":"removeAppcache","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.removeAppcache","comment":"<p>Clears websites' appcache data.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"options":{"name":"options","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.RemovalOptions","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"removeCache":{"name":"removeCache","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.removeCache","comment":"<p>Clears the browser's cache.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"options":{"name":"options","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.RemovalOptions","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"removeCookies":{"name":"removeCookies","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.removeCookies","comment":"<p>Clears the browser's cookies and server-bound certificates modified within\na particular timeframe.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"options":{"name":"options","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.RemovalOptions","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"removeDownloads":{"name":"removeDownloads","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.removeDownloads","comment":"<p>Clears the browser's list of downloaded files (<em>not</em> the downloaded files\nthemselves).</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"options":{"name":"options","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.RemovalOptions","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"removeFileSystems":{"name":"removeFileSystems","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.removeFileSystems","comment":"<p>Clears websites' file system data.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"options":{"name":"options","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.RemovalOptions","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"removeFormData":{"name":"removeFormData","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.removeFormData","comment":"<p>Clears the browser's stored form data (autofill).</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"options":{"name":"options","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.RemovalOptions","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"removeHistory":{"name":"removeHistory","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.removeHistory","comment":"<p>Clears the browser's history.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"options":{"name":"options","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.RemovalOptions","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"removeIndexedDB":{"name":"removeIndexedDB","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.removeIndexedDB","comment":"<p>Clears websites' IndexedDB data.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"options":{"name":"options","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.RemovalOptions","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"removeLocalStorage":{"name":"removeLocalStorage","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.removeLocalStorage","comment":"<p>Clears websites' local storage data.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"options":{"name":"options","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.RemovalOptions","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"removePluginData":{"name":"removePluginData","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.removePluginData","comment":"<p>Clears plugins' data.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"options":{"name":"options","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.RemovalOptions","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"removePasswords":{"name":"removePasswords","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.removePasswords","comment":"<p>Clears the browser's stored passwords.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"options":{"name":"options","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.RemovalOptions","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"removeWebSQL":{"name":"removeWebSQL","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.removeWebSQL","comment":"<p>Clears websites' WebSQL data.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"options":{"name":"options","optional":false,"named":false,"default":false,"type":[{"outer":"chrome/chrome_ext.RemovalOptions","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"_throwNotAvailable":{"name":"_throwNotAvailable","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData._throwNotAvailable","comment":"","commentFrom":"chrome_ext.ChromeBrowsingData._throwNotAvailable","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>chrome/chrome_ext.ChromeBrowsingData.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]},"available":{"name":"available","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.available","comment":"<p>Returns true if the API is available. The common causes of an API not being\navilable are:</p><ul><li>a permission is missing in the application's manifest.json file</li><li>the API is defined on a newer version of Chrome then the current runtime</li></ul>","commentFrom":"","inheritedFrom":"chrome_ext.ChromeApi.available","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>chrome/chrome_ext.ChromeBrowsingData.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>chrome/chrome_ext.ChromeBrowsingData.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"chrome/chrome_ext.ChromeBrowsingData.noSuchMethod","comment":"<p><a>chrome/chrome_ext.ChromeBrowsingData.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>chrome/chrome_ext.ChromeBrowsingData.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>chrome/chrome_ext.ChromeBrowsingData.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>chrome/chrome_ext.ChromeBrowsingData.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}